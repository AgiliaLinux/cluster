#!/bin/bash

BASE_DIR=$(cd "`dirname "${BASH_SOURCE[0]}"`" && pwd)
SCRIPTS_DIR=$BASE_DIR/scripts
FILES_DIR=$BASE_DIR/files
# Base variables
CLUSTER_DIR=${CLUSTER_DIR:-/media/cluster}
CONFIG_DIR=${CONFIG_DIR:-/etc/agilia}
REPO_DIR=${REPO_DIR:-/mnt/repository}
LISTS_DIR=${INSTALL_LISTS:-/mnt/install-lists}
ARCH=${BUILD_ARCH}
SSH_PORT=4501

source $SCRIPTS_DIR/chroot_tools
source $SCRIPTS_DIR/fs_tools
source $SCRIPTS_DIR/ssh_tools

if [ "$ARCH" = "" -o "$ARCH" = "auto" ] ; then
  if [ "`uname -m`" = "x86_64" ] ; then
    ARCH=x86_64
  else
    ARCH=x86
  fi
fi
REPO_DIR="${REPO_DIR}/${ARCH}"

# Returns also 0 if array is empty
in_array() {
  local VAL=$1 ARR=("${@:2}")
  if [[ ${#ARR[@]} -eq 0 ]]; then
    return 0
  fi
  local EL
  for EL in "${ARR[@]}"; do [[ "$EL" = "$VAL" ]] && return 0; done
  return 1
}

uninstall() {
  local NODE=$1
  local DIR="$CLUSTER_DIR/$NODE"
  fs_delete $DIR
}

install() {
  local CONFIGS=("$@")
  fs_get_lists "$LISTS_DIR"
  for NODE in "${BUILD_LISTS[@]}"; do
    SSH_PORT=$((SSH_PORT+1))
    in_array "$NODE" "${CONFIGS[@]}" && do_install $NODE $PORT
  done
  #echo 131072 > /proc/sys/fs/file-max
  echo <<END > /etc/local.d/cluster.start
#!/bin/bash
$BASE_DIR/cluster start
END
}

do_install() {
  local NODE=$2 PORT=$3
  local DIR="$CLUSTER_DIR/$NODE"
  if [ ! -f "$LISTS_DIR/${NODE}.list" ]; then
      echo "Wrong node name $NODE"
      exit 1
  fi
  trap 'exit' ERR
  fs_delete "$DIR"
  echo "Initializing $NODE"
  fs_create "$DIR"
  chroot_mount "$DIR"
  fs_install "$DIR" "$NODE"
  ssh_setup "$DIR" "$PORT"
  # chroot_do $DIR su - -c ./startup
  echo "Done"
}

start_all() {
  local CONFIGS=("$@")
  fs_get_lists "$LISTS_DIR"
  for NODE in "${BUILD_LISTS[@]}"; do
    in_array "$NODE" "${CONFIGS[@]}" && do_start $NODE
  done
}

do_start() {
  local NODE=$1
  local DIR="$CLUSTER_DIR/$NODE"
  echo "Starting $NODE"
  trap 'exit' ERR
  chroot_mount "$DIR"
  ssh_start "$DIR"
  echo "Done"
}

ssh_to() {
  local NODE=$1
  local DIR="$CLUSTER_DIR/$NODE"
  if [ ! -d "$DIR" ]; then
    echo "No such node $NODE"
  fi
  ssh_connect "$DIR"
}

case $1 in
  install)
    shift
    install "$@"
  ;;
  uninstall)
    shift
    uninstall "$@"
  ;;
  start)
    shift
    start_all "$@"
  ;;
  ssh)
    shift
    ssh_to "$@"
  ;;
  *)
    echo "Unknown option"
    exit 1;
  ;;
esac
