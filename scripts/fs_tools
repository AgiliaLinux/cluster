#!/bin/bash

MOUNTS_STATE_FILE=${MOUNTS_STATE_FILE:-active_mounts}
ACTIVE_MOUNTS=()

get_lists() {
  local DIR=$1
  BUILD_LISTS=();
  for LIST in "$DIR"/*.list; do
    local BL=$(basename ${LIST%.list});
    if [[ ! -e $DIR/$BL.desc ]]; then
      echo "$BL list have no description file"
      continue
    fi
    BUILD_LISTS=("$BL" "${BUILD_LISTS[@]}")
  done
}

fs_add_mount() {
  mount "$@" && ACTIVE_MOUNTS=("$2" "${ACTIVE_MOUNTS[@]}")
}

fs_save_mounts() {
  local DIR=$1
  local FILE="$DIR/$CONFIG_DIR/$MOUNTS_STATE_FILE"
  fs_read_mounts $DIR
  echo "${ACTIVE_MOUNTS[@]}" > $FILE
}

fs_read_mounts() {
  local DIR=$1
  local FILE="$DIR/$CONFIG_DIR/$MOUNTS_STATE_FILE"
  local mounts=("${ACTIVE_MOUNTS[@]}")
  ACTIVE_MOUNTS=($(cat $FILE 2>/dev/null))
  ACTIVE_MOUNTS=("$mounts" "${ACTIVE_MOUNTS[@]}")
  ACTIVE_MOUNTS=$(echo "${ACTIVE_MOUNTS[@]}" | tr ' ' '\n' | sort -u | tr '\n' ' ')
}

fs_umount_dir() {
  local DIR=$1
  local FILE="$DIR/$CONFIG_DIR/$MOUNTS_STATE_FILE"
  local MOUNTS=$(mount | awk '{ print $3; }' | grep "$DIR" | tac)
  umount "${MOUNTS[@]}"
  fs_read_mounts $DIR
  shopt -s extglob
  ACTIVE_MOUNTS=${ACTIVE_MOUNTS//${DIR}*([^ ])?( )}
  echo "${ACTIVE_MOUNTS[@]}" > $FILE
  shopt -u extglob
}

create_dir() {
  local DIR=$1
  fs_umount_dir $DIR
  rm -rf $DIR
  mkdir -p "$DIR" "$DIR/$CONFIG_DIR"
  mkdir -p "$DIR"/{etc,tmp}
  mkdir -p "$DIR"/var/mpkg/{packages,scripts,configs,backup}
  mkdir -p "$DIR"/{root,home,proc,sys,dev,mnt,media}
  mkdir -p "$DIR"/usr/local/{bin,lib,sbin,share,doc}
  mkdir -p "$DIR"/etc/init.d
  mkdir -p "$DIR"/etc/rc.d

  chmod 1777 "$DIR"/tmp
  # This is for KDE:
  ln -s ../tmp "$DIR"/var/tmp
  # For malformed packages
  n -s ../init.d "$DIR"/etc/rc.d/init.d
}

install_to() {
  local DIR=$1 NODE=$2
  local LIST="$DIR/$CONFIG_DIR/node.list"
  echo "Installing $NODE to $DIR"
  # Copy files
  cp "$LISTS_DIR"/$NODE.list "$LIST"
  cp "$FILES_DIR"/mpkg.xml.system "$DIR"/etc/mpkg.xml.system
  sed -e s#NODE#$NODE#g -e s#ARCH#$ARCH#g \
    "$FILES_DIR"/mpkg.xml > "$DIR"/etc/mpkg.xml
  cp "$FILES_DIR"/packages.db "$DIR"/var/mpkg/
  local ARGS="--conf=\"$DIR\"/etc/mpkg.xml --sysroot=\"$DIR\""
  mpkg-add_rep $ARGS $REPO_DIR
  # Installing
  mpkg-update $ARGS || exit 1
  mpkg-installfromlist -v -y -m $ARGS "$LIST" || exit 1
  # Move config
  mv "$DIR"/etc/mpkg.xml{.system,}
  echo "Installation complete"
}

