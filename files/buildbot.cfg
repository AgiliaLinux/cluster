# -*- python -*-
# ex: set syntax=python:

import settings
from buildbot.plugins import (util, buildslave, changes,
                              schedulers, steps, status)

c = BuildmasterConfig = {}

# BUILDSLAVES

c['slaves'] = [buildslave.BuildSlave(*args) for args in settings.slaves]
c['protocols'] = {'pb': {'port': settings.web.proto}}

# CHANGESOURCES

c['change_source'] = [changes.GitPoller(**settings.source)]

# SCHEDULERS

c['schedulers'] = [
    schedulers.SingleBranchScheduler(name="all", treeStableTimer=None,
        change_filter=util.ChangeFilter(branch=settings.source.branches[0]),
        builderNames=[settings.builder]),
    schedulers.ForceScheduler(name="force", builderNames=[settings.builder])
]

# BUILDERS

factory = util.BuildFactory(
    steps.Git(repourl=settings.source.repourl, mode='incremental',
        workdir=settings.source.workdir),
    steps.ShellCommand(command=[settings.build.cluster, 'prepare',
        util.Interpolate('%(prop:got_revision)s')],
        workdir=settings.build.workdir)
    steps.ShellCommand(command=[settings.build.cluster, 'run',
        util.Interpolate('%(prop:got_revision)s')],
        workdir=settings.build.workdir)
    steps.ShellCommand(command=[settings.build.cluster, 'copy',
        util.Interpolate('%(prop:got_revision)s')],
        workdir=settings.build.workdir),
    steps.ShellCommand(command=[settings.build.cluster, 'index'])
)

c['builders'] = [
    util.BuilderConfig(name=settings.build.builder, factory=factory,
        slavenames=[slave[0] for slave in settings.slaves]),
]

# STATUS TARGETS

c['status'] = [
    status.WebStatus(http_port=settings.web.port, authz=util.Authz(
        auth=util.BasicAuth(settings.users), forceBuild='auth')),
]

# PROJECT IDENTITY

c['title'] = settings.web.title
c['titleURL'] = settings.web.url
c['buildbotURL'] = setttings.web.buildbot

# DB URL

c['db'] = {'db_url': settings.db}
